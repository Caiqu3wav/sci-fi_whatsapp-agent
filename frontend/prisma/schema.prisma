generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(PENDING)
  status    UserStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])
  clients   Client[]
  flows     Flow[]
  integrations Integration[]
}

model Company {
  id         String   @id @default(cuid())
  name       String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  users      User[]
}

model Client {
  id          String   @id @default(cuid())
  userId      String
  name        String
  phoneNumber String   @unique
  email       String?
  notes       String?
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}

model Flow {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String
  n8nUrl      String
  active      Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id])
}

model Integration {
  id            String   @id @default(cuid())
  userId        String
  whatsappToken String
  phoneNumberId String
  businessName  String?
  verified      Boolean  @default(false)
  createdAt     DateTime @default(now())

  user          User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
  PENDING
}

enum UserStatus {
  ACTIVE
  PENDING
  REJECTED
}